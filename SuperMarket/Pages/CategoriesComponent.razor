<h3>Manage Categories</h3>
@page "/categories"
@attribute [Authorize(Policy = "AdminOnly")]

@inject IViewCategoriesUseCase ViewCategoriesUseCase
@inject IDeleteCategoryUseCase DeleteCategoryUseCase
@inject NavigationManager NavigationManager
@if(categories!=null){
	
		<table class="table">
			<thead>
				<tr>
					<th>
						Name
					</th>
					<th>
						Description
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
			@foreach (var category in categories)
			{
				<tr>
					<td>@category.Name</td>
					<td>@category.Description</td>
					<th>
						<button type="button" @onclick="@(() => EditCategory(category))" class="btn btn-link">Edit</button>
						<button type="button" @onclick="@(() => DeleteCategory(category.CategoryId))" class="btn btn-link">Delete</button>
					</th>
				</tr>
			}
			</tbody>
		</table>
	}
	<br />
	<button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>
	

@code {
	private IEnumerable<Category> categories;
	protected override void OnInitialized(){
		base.OnInitialized();
		categories = ViewCategoriesUseCase.Execute()?.ToList();
	}
	private void OnClickAddCategory()
	{
		NavigationManager.NavigateTo("/addCategory");
	}

	private void EditCategory(Category category)
	{
		NavigationManager.NavigateTo($"/editCategory/{category.CategoryId}");
	}
	private void DeleteCategory(int catId)
	{
		DeleteCategoryUseCase.Delete(catId);
		LoadCategories();
	}
	private void LoadCategories()
	{
		categories = ViewCategoriesUseCase.Execute()?.ToList();
	}
}
